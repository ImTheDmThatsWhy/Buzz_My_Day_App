name: Build and Deploy to Cloud Run

on:
  push:
    branches:  "cloud" 
env:
  PROJECT_ID: buzzmydayapp
  GAR_NAME: mern-stack-containers
  GAR_LOCATION: australia-southeast2
  SERVICE: mern-stack-app 
  REGION: us-central1

jobs:
  deploy:
    environment: production
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Generate File for Workflow
      #   run: |
      #        mkdir -p workflows
      #        echo "name: Build and deploy workflow"> workflows/cloud.yml
      # - name: Upload files
      #   run:

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Docker Auth
        run: |-
          gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build --build-arg VITE_API_ENDPOINT=${{ secrets.VITE_API_ENDPOINT }} -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
      
      - name: Archive Build
        run: zip -r build.zip dist/
      
      - name: Upload Artifact 
        uses: actions/upload-pages-artifact@v3
        with:
          name: build-artifact
          path: build.zip
         
      # - name: Create release to Cloud Deploy
      #   uses: gcp-clouddeploy-ecosystem/release-clouddeploy@main
      #   with:
      #        release: release-01
      #        delivery-pipeline: cloud

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          env_vars: |-
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}